/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_edma.h"
#include "fsl_dmamux.h"
#include "fsl_common.h"
#include "fsl_clock.h"
#include "fsl_ftm.h"
#include "fsl_pit.h"
#include "fsl_uart.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA_DMA_BASEADDR DMA0
/* Associated DMAMUX device that is used for muxing of requests. */
#define DMA_DMAMUX_BASEADDR DMAMUX
/* DMA interrupt vector ID (number). */
#define DMA_DMA_INT_ERROR_IRQN DMA_Error_IRQn
/* DMA interrupt handler identifier. */
#define DMA_DMA_INT_ERROR_IRQHANDLER DMA_Error_IRQHandler

  /* Channel CH0 definitions */
/* DMA eDMA source request. */
#define DMA_CH0_DMA_REQUEST kDmaRequestMux0AlwaysOn58
/* Selected eDMA channel number. */
#define DMA_CH0_DMA_CHANNEL 0
/* DMA interrupt vector ID (number). */
#define DMA_DMA_CH_INT_DONE_0_IRQN DMA0_IRQn
/* DMA channel interrupt request. */
#define DMA_CH0_IRQ_REQUEST kEDMA_ErrorInterruptEnable
/* Definition of peripheral ID */
#define FTM0_PERIPHERAL FTM0
/* Definition of the clock source frequency */
#define FTM0_CLOCK_SOURCE 60000000UL
/* Definition of the clock source frequency */
#define FTM0_TIMER_MODULO_VALUE 1499
/* Definition of FTM0 channel/pair number 0 on Edge-aligned PWM */
#define FTM0_TEST_SIGNAL_CHANNEL kFTM_Chnl_0
/* BOARD_InitPeripherals defines for PIT */
/* Definition of peripheral ID. */
#define PIT_PERIPHERAL PIT
/* Definition of clock source. */
#define PIT_CLOCK_SOURCE kCLOCK_BusClk
/* Definition of clock source frequency. */
#define PIT_CLK_FREQ 60000000UL
/* Definition of ticks count for channel 0 - deprecated. */
#define PIT_0_TICKS 6U
/* Definition of channel number for channel 0. */
#define PIT_CHANNEL_0 kPIT_Chnl_0
/* Definition of ticks count for channel 0. */
#define PIT_CHANNEL_0_TICKS 6U
/* Definition of peripheral ID */
#define UART0_PERIPHERAL UART0
/* Definition of the clock source frequency */
#define UART0_CLOCK_SOURCE 120000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const edma_config_t DMA_config;
extern edma_handle_t DMA_CH0_Handle;
/* Transactional transfer configuration */
extern edma_transfer_config_t DMA_CH0_TRANSFER0_config;
extern const ftm_config_t FTM0_config;
extern const pit_config_t PIT_config;
extern const uart_config_t UART0_config;

/***********************************************************************************************************************
 * Callback functions
 **********************************************************************************************************************/
/* eDMA callback function for the 0 channel.*/
extern void DMA_User_Callback(edma_handle_t*, void*, bool, uint32_t);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
